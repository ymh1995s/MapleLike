@page "/users/{userId}"
@using System.Net.Http.Json
@using Google.Protobuf.Protocol
@using ManagementTool.Data
@using ServerContents.DB
@using static AccountServer.Controllers.GameServerController
@inject Managament Managament

<h2>유저 상세</h2>
<hr />
@if (user == null)
{
    <p>로딩 중...</p>
}
else
{
    <h4>유저 스펙</h4>
    <EditForm Model="user" OnValidSubmit="UpdateUser">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>이름 : </label> @user.DbId
        </div>

        <div>
            <label>레벨 : </label>
            <InputNumber @bind-Value="user.Level" />
        </div>

        <div>
            <label>Current HP : </label>
            <InputNumber @bind-Value="user.CurrentHp" />
        </div>

        <div>
            <label>Max HP : </label>
            <InputNumber @bind-Value="user.MaxHp" />
        </div>

        <div>
            <label>Current MP : </label>
            <InputNumber @bind-Value="user.CurrentMp" />
        </div>

        <div>
            <label>Max MP : </label>
            <InputNumber @bind-Value="user.MaxMp" />
        </div>

        <div>
            <label>STR : </label>
            <InputNumber @bind-Value="user.STR" />
        </div>

        <div>
            <label>DEX : </label>
            <InputNumber @bind-Value="user.DEX" />
        </div>

        <div>
            <label>INT : </label>
            <InputNumber @bind-Value="user.INT" />
        </div>

        <div>
            <label>LUK : </label>
            <InputNumber @bind-Value="user.LUK" />
        </div>

        <button type="submit">==== 유저 스펙 저장 ====</button>
    </EditForm>

    <hr />

    <h4>인벤토리 (포션 / 골드만 수정 가능)</h4>

    <ul>
        @foreach (InventoryDb item in inventory)
        {
            <li>
                <strong>@item.ItemDbId</strong> (수량 : 
                @if ((int)item.ItemDbId < 1000)
                {
                    // 1000 이상(소비와 Gold만 수정 가능)                
                    <InputNumber @bind-Value="item.Count" min="1" />
                <button @onclick="() => UpdateInventoryItem(new InventoryUpdateDto {
                    InventoryDbId = item.InventoryDbId,
                    Count = item.Count,
                    IsEquipped = item.IsEquipped
                })"> 수량 수정</button>
                }
                else
                {
                    // 장비는 수량을 설정할 수 없음 ( Add로만 추가 가능 )
                    <span>@item.Count</span>
                }
                )
            </li>
        }
    </ul>

    <hr />

    <h4>아이템 추가</h4>
    <EditForm Model="newItem" OnValidSubmit="AddItem">
        <div>
            <label>아이템 종류: </label>
            <InputSelect @bind-Value="newItem.ItemDbId">
                @foreach (var type in Enum.GetValues<ItemType>())
                {
                    <option value="@type">@type</option>
                }
            </InputSelect>
        </div>

        @if ((int)newItem.ItemDbId == 0 /*INONE*/)
        {
            <div>
                <label> 추가할 아이템을 선택하세요 </label>
            </div>
        }
        else if ((int)newItem.ItemDbId < 1000)
        {
            <div>
                <label>수량: </label>
                <InputNumber @bind-Value="newItem.Count" min="1" />
            </div>
            <button type="submit">추가</button>
        }
        else
        {
            <div>
                <label>수량: </label>
                <span>1</span>
            </div>
            <button type="submit">추가</button>
        }

    </EditForm>
}

@code {
    [Parameter] public string userId { get; set; }

    private UserDb user;
    private List<InventoryDb> inventory = new();
    private InventoryDb newItem = new InventoryDb();

    protected override async Task OnInitializedAsync()
    {
        user = await Managament.GetUserAsync(userId);
        inventory = await Managament.GetInventoryAsync(userId);
    }

    private async Task UpdateUser()
    {
        await Managament.UpdateUserAsync(user);
    }

    private async Task UpdateInventoryItem(InventoryUpdateDto item)
    {
        await Managament.UpdateInventoryItemAsync(item);
    }

    private async Task AddItem()
    {
        newItem.UserDbId = user.DbId;

        if ((int)newItem.ItemDbId >= 1000)
            newItem.Count = 1;
        else if (newItem.Count < 1)
            newItem.Count = 1;

        await Managament.AddItemAsync(newItem);

        newItem = new InventoryDb();
        inventory = await Managament.GetInventoryAsync(userId);
    }
}